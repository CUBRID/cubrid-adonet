<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArgumentMustBeCUBRIDParameter" xml:space="preserve">
    <value>Argument must be of type CUBRIDParameter</value>
  </data>
  <data name="BufferIndexMustBeValidIndexInBuffer" xml:space="preserve">
    <value>Buffer index must be a valid index in buffer</value>
  </data>
  <data name="BufferNotLargeEnoughToHoldRequestedData" xml:space="preserve">
    <value>Buffer is not large enough to hold the requested data</value>
  </data>
  <data name="CantChangeDatabase" xml:space="preserve">
    <value>Changing database is not supported in CUBRID. Please open a new connection instead</value>
  </data>
  <data name="ConnectionAlreadyOpen" xml:space="preserve">
    <value>Connection is already open</value>
  </data>
  <data name="ConnectionMustBeValidAndOpenToCommit" xml:space="preserve">
    <value>Connection must be valid and open to commit transaction</value>
  </data>
  <data name="CUBRIDDataTypeCantBeMappedToDbType" xml:space="preserve">
    <value>CUBRID data type can't be mapped to a Db type</value>
  </data>
  <data name="DataOffsetMustBeValidPositionInField" xml:space="preserve">
    <value>Data offset must be a valid position in the field</value>
  </data>
  <data name="DataReaderIsAlreadyOpen" xml:space="preserve">
    <value>The DataReader is already open</value>
  </data>
  <data name="DbTypeCantBeMappedToCUBRIDDataType" xml:space="preserve">
    <value>DbType can't be mapped to a CUBRID data type</value>
  </data>
  <data name="DefineWhetherTraceInformationIsLogged" xml:space="preserve">
    <value>Define whether trace information is logged</value>
  </data>
  <data name="DontKnowHowToWriteParameter" xml:space="preserve">
    <value>Don't know how to write the parameter</value>
  </data>
  <data name="ErrorReadingLOBContent" xml:space="preserve">
    <value>Error reading LOB content</value>
  </data>
  <data name="ErrorWrittingLOBContent" xml:space="preserve">
    <value>Error writting LOB content</value>
  </data>
  <data name="GetBytesCanBeCalledOnlyOnBinaryColumns" xml:space="preserve">
    <value>GetBytes() can be called only on binary (BLOB, CLOB) columns</value>
  </data>
  <data name="IncorrectNumberOfFilters" xml:space="preserve">
    <value>Incorrect number of filters were specified</value>
  </data>
  <data name="InvalidAttemptToReadDataWhenReaderNotOpen" xml:space="preserve">
    <value>Invalid attempt to read data when reader is not open</value>
  </data>
  <data name="InvalidBufferPosition" xml:space="preserve">
    <value>Invalid buffer position</value>
  </data>
  <data name="InvalidConnectionParameter" xml:space="preserve">
    <value>Invalid connection parameter</value>
  </data>
  <data name="InvalidConnectionPort" xml:space="preserve">
    <value>Invalid connection port</value>
  </data>
  <data name="InvalidConnectionString" xml:space="preserve">
    <value>Invalid connection string</value>
  </data>
  <data name="DBNameIsEmpty" xml:space="preserve">
    <value>The database name can't be empty</value>
  </data>
  <data name="InvalidLOBPosition" xml:space="preserve">
    <value>Invalid LOB Position</value>
  </data>
  <data name="InvalidPropertyName" xml:space="preserve">
    <value>Invalid property name</value>
  </data>
  <data name="InvalidQueryType" xml:space="preserve">
    <value>Invalid query type</value>
  </data>
  <data name="InvalidTimeoutValue" xml:space="preserve">
    <value>Invalid Timeout value! Expected a value between 1 and 99</value>
  </data>
  <data name="NoFiltersSpecified" xml:space="preserve">
    <value>No filters were specified</value>
  </data>
  <data name="NotAllowedToChangeConnectionStringWhenStateIs" xml:space="preserve">
    <value>Not allowed to change the 'ConnectionString' property while the connection state is</value>
  </data>
  <data name="NotAllowedToChangeConnectionTimeoutWhenStateIs" xml:space="preserve">
    <value>Not allowed to change the 'ConnectionTimeout' property while the connection state is</value>
  </data>
  <data name="NotAllowedToChangeLockTimeoutWhenStateIs" xml:space="preserve">
    <value>Not allowed to change the 'LockTimeout' property while the connection state is</value>
  </data>
  <data name="NotAllParametersAreBound" xml:space="preserve">
    <value>Not all parameters are bound</value>
  </data>
  <data name="NotAValidLOBType" xml:space="preserve">
    <value>Not a valid LOB type</value>
  </data>
  <data name="NotImplemented" xml:space="preserve">
    <value>Not implemented</value>
  </data>
  <data name="NotSupported" xml:space="preserve">
    <value>Not supported</value>
  </data>
  <data name="NotSupportedInCUBRID" xml:space="preserve">
    <value>Not supported in CUBRID</value>
  </data>
  <data name="OnlyCUBRIDParameterObjectsAreValid" xml:space="preserve">
    <value>Only CUBRIDParameter objects are valid</value>
  </data>
  <data name="ParameterAlreadyAdded" xml:space="preserve">
    <value>Parameter already added to the collection</value>
  </data>
  <data name="ParameterNameMustStartWith" xml:space="preserve">
    <value>Parameter name must start with '?'</value>
  </data>
  <data name="ParameterNotFound" xml:space="preserve">
    <value>Parameter not found in the collection</value>
  </data>
  <data name="ParametersMustBeNamed" xml:space="preserve">
    <value>Parameters must be named</value>
  </data>
  <data name="ResultsetIsClosed" xml:space="preserve">
    <value>Resultset is closed</value>
  </data>
  <data name="TheConnectionIsNotOpen" xml:space="preserve">
    <value>The connection is not open</value>
  </data>
  <data name="TheConnectionPropertyHasNotBeenSet" xml:space="preserve">
    <value>The connection property has not been set</value>
  </data>
  <data name="TransactionAlreadyCommittedOrNotPending" xml:space="preserve">
    <value>Transaction has already been committed or is not pending</value>
  </data>
  <data name="UnknownIsolationLevelNotSupported" xml:space="preserve">
    <value>Unknown isolation level is not supported</value>
  </data>
  <data name="ParameterNotFoundMissingPrefix" xml:space="preserve">
    <value>Parameter not found in collection. You should add '?' to the parameter name before searching.</value>
  </data>
  <data name="collectionNameIsNull" xml:space="preserve">
    <value>The collectionName is specified as null.</value>
  </data>
  <data name="ConnectFailed" xml:space="preserve">
    <value>Connect failed</value>
  </data>
  <data name="ConnectionStringIsNULL" xml:space="preserve">
    <value>Connection string is null</value>
  </data>
  <data name="ConnectionMustBeValidAndOpenToRollBack" xml:space="preserve">
    <value>Connection must be valid and open to rollback transaction</value>
  </data>
  <data name="ServerIsEmpty" xml:space="preserve">
    <value>The Server can't be empty</value>
  </data>
  <data name="UserIsEmpty" xml:space="preserve">
    <value>The User can't be empty</value>
  </data>
  <data name="PasswordIsEmpty" xml:space="preserve">
    <value>The Password can't be empty</value>
  </data>
</root>